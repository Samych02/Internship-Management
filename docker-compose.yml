services:
  backend:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
    container_name: backend
    depends_on:
      - db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Internship-Management
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - C:\Users\scherif\OneDrive - Capgemini\InternshipManagementResources:/app/data

    networks:
      - backend
      - frontend
    ports:
      - 8081:8081

  db:
    image: postgres:16
    container_name: db
    environment:
      - POSTGRES_DB=Internship-Management
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    expose:
      - 5432

  frontend:
    build: ../Internship-Management-Frontend
    container_name: frontend
    depends_on:
      - backend
    networks:
      - frontend
    ports:
      - 3000:3000

  nginx:
    build: ../Internship-Management-Frontend/nginx
    container_name: nginx
    volumes:
      - C:/Users/scherif/OneDrive - Capgemini/InternshipManagementResources:/usr/share/nginx/html/
    ports:
      - 80:80
    networks:
      - frontend

networks:
  backend:
    internal: true  # Only for postgres <-> springboot
  internal:
    internal: true  # Only for springboot <-> nextjs
  frontend:
    driver: bridge  # Publicly accessible network

volumes:
  pgdata:
